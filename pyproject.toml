[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "zulip-refinement-bot"
version = "1.0.0"
description = "A modern Zulip bot for batch story point estimation and refinement workflows"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Chat",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["zulip", "bot", "agile", "estimation", "scrum"]
requires-python = ">=3.11"
dependencies = [
    "zulip>=0.8.0",
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.0.0",
    "structlog>=23.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "holidays>=0.34",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov",
    "pytest-asyncio",
    "flake8",
    "mypy",
    "pre-commit",
    "ruff",
]
test = [
    "pytest>=7.0",
    "pytest-cov",
    "pytest-asyncio",
    "pytest-mock",
]

[project.urls]
Homepage = "https://github.com/yourusername/zulip-refinement-bot"
Documentation = "https://github.com/yourusername/zulip-refinement-bot#readme"
Repository = "https://github.com/yourusername/zulip-refinement-bot"
Issues = "https://github.com/yourusername/zulip-refinement-bot/issues"

[project.scripts]
zulip-refinement-bot = "zulip_refinement_bot.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/zulip_refinement_bot"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]


[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "zulip.*"
ignore_missing_imports = true


[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
module = "zulip_refinement_bot.cli"
disallow_untyped_decorators = false

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Ruff configuration
[tool.ruff]
target-version = "py311"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]
"src/zulip_refinement_bot/bot.py" = ["E501"]
"src/zulip_refinement_bot/bot_original.py" = ["E501"]
"src/zulip_refinement_bot/github_api.py" = ["E501"]
"src/zulip_refinement_bot/handlers.py" = ["E501"]
"src/zulip_refinement_bot/services.py" = ["E501"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used check
