name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: "3.11"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-version: latest
        activate-environment: zulip-refinement-bot
        environment-file: environment.yml
        python-version: ${{ matrix.python-version }}
        auto-activate-base: false
    
    - name: Install package
      shell: bash -l {0}
      run: |
        pip install -e ".[dev,test]"
    
    - name: Lint with ruff
      shell: bash -l {0}
      run: |
        ruff check src/ tests/
    
    - name: Format check with black
      shell: bash -l {0}
      run: |
        black --check src/ tests/
    
    - name: Import sort check with isort
      shell: bash -l {0}
      run: |
        isort --check-only src/ tests/
    
    - name: Type check with mypy
      shell: bash -l {0}
      run: |
        mypy src/
    
    - name: Test with pytest
      shell: bash -l {0}
      run: |
        pytest tests/ -v --cov=src/zulip_refinement_bot --cov-report=xml --cov-report=html
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install security tools
      run: |
        pip install bandit[toml] safety
    
    - name: Run bandit security check
      run: |
        bandit -r src/ -f json -o bandit-report.json || true
        bandit -r src/
    
    - name: Run safety check
      run: |
        safety check --json --output safety-report.json || true
        safety check

  docker:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
